{"version":3,"sources":["newIssueButton/newIssueButton.js","searchBar/searchBar.js","commentBox/commentBox.js","IssueSmall/issueSmall.js","issueHolder/issueHolder.js","pagenation/pagenation.js","issuePage/issuePage.js","App.js","serviceWorker.js","index.js"],"names":["newIssueButton","props","state","title","comment","insertNewIssue","bind","titleHandler","commentHandler","requestOptions","method","headers","body","JSON","stringify","this","fetch","then","res","json","document","getElementById","click","refreshPage","undefined","e","setState","target","value","Fragment","type","className","data-toggle","data-target","id","tabIndex","role","aria-labelledby","aria-hidden","style","placeholder","onChange","data-dismiss","aria-label","rows","onClick","Component","searchBar","closed","filterSelectionHandler","filterHandler","aria-haspopup","aria-expanded","href","commentBox","name","commentCount","dom","watch","issueSmall","key","topic","Math","floor","Date","creationdate","author","random","data","records","laterRecords","PageHandler","retun_arry","i","push","length","scope","openIssue","closeIssue","RowsCreator","window","React","Paginations","handlePageClick","selected","offset","ceil","page","loadCommentsFromServer","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","issuePage","totalIssue","UpdateRecords","updateFilter","issueCount","closeCount","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2eb8db83.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class newIssueButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            comment: ''\r\n        }\r\n        this.insertNewIssue = this.insertNewIssue.bind(this)\r\n        this.titleHandler = this.titleHandler.bind(this)\r\n        this.commentHandler = this.commentHandler.bind(this)\r\n\r\n    }\r\n\r\n    insertNewIssue() {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ title: this.state.title, comment: this.state.comment })\r\n        };\r\n        fetch('http://localhost:5400/add-issue', requestOptions).then(res => { return res.json() }).then(res => {\r\n            document.getElementById('closeModal').click()\r\n        })\r\n        this.props.refreshPage(undefined)\r\n\r\n\r\n\r\n    }\r\n\r\n    titleHandler(e) {\r\n        this.setState({ title: e.target.value })\r\n    }\r\n    commentHandler(e) {\r\n        this.setState({ comment: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button type=\"button\" className=\"btn btn-success ml-2\" data-toggle=\"modal\" data-target=\"#exampleModal\">New Issue</button>\r\n                <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header pb-0\">\r\n                                <div className=\"form-group\" style={{ 'width': '95%' }}>\r\n                                    <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Title\" onChange={this.titleHandler} />\r\n                                </div>\r\n                                <button type=\"button\" id='closeModal' className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body pb-0\"><div className=\"form-group\">\r\n\r\n                                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"want to add commment?\"></textarea>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button \" className=\"btn btn-success pull-right\" data-dismiss=\"modal\" onClick={this.insertNewIssue}>Submit new issue</button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default newIssueButton\r\n","import React, { Component } from 'react'\r\nimport NewIssueButton from '../newIssueButton/newIssueButton'\r\nexport default class searchBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            closed: undefined\r\n        }\r\n        this.filterSelectionHandler = this.filterSelectionHandler.bind(this)\r\n    }\r\n\r\n    filterSelectionHandler(e) {\r\n        this.props.filterHandler(e)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"input-group mb-2 mr-sm-2\">\r\n                <div className=\"input-group-prepend\">\r\n                    <button className=\"btn btn-outline-secondary dropdown-toggle btn-light\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Filters</button>\r\n                    <div className=\"dropdown-menu\">\r\n                        <a className=\"dropdown-item\" href=\"/#\" onClick={() => this.filterSelectionHandler(undefined)}>Show all</a>\r\n                        <a className=\"dropdown-item\" href=\"/#\" onClick={() => this.filterSelectionHandler(0)}>is Open</a>\r\n                        <a className=\"dropdown-item\" href=\"/#\" onClick={() => this.filterSelectionHandler(1)}>is Closed</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\" style={{ 'backgroundColor': 'white' }} id=\"basic-addon1\"><i className=\"fa fa-search\" style={{ 'color': 'black', 'backgroundColor': 'white' }} aria-hidden=\"true\"></i>\r\n                    </span>\r\n                </div>\r\n                <input type=\"text \" className=\"form-control\" id=\"inlineFormInputGroupUsername2\" style={{\"borderLeft\":'none'}} placeholder=\"is:issue: is:open\" />\r\n                <button className=\"btn  ml-2 \" style={{ 'border': '2px solid #adaaaa' }}><i className=\"fas fa-tag mr-1\"></i>label<span className=\"badge badge-light badge-pill\">4</span></button>\r\n                <button className=\"btn  ml-2\" style={{ 'border': '2px solid #adaaaa' }}><i className=\"fas fa-map-signs\"></i> Milestone<span className=\"badge badge-light badge-pill\">10</span></button>\r\n                <NewIssueButton refreshPage={this.filterSelectionHandler} />\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass commentBox extends Component {\r\n\r\n    render() {\r\n        if (this.props.name !== undefined && this.props.name.commentCount > 0) {\r\n            return (<div><i className=\"far fa-comment-alt mr-1\"></i>{this.props.name.commentCount}</div>)\r\n        }\r\n        else {\r\n            // return (<div >No comments</div>)\r\n            return (<div style={{ 'display': 'none' }}></div>)\r\n        }\r\n    }\r\n}\r\nexport default commentBox\r\n","import React, { Component } from 'react'\r\n// import { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\n// import FontAwesomeIcon  from '@fortawesome/fontawesome-svg-core'\r\nimport { dom } from '@fortawesome/fontawesome-svg-core'\r\nimport CommentBox from '../commentBox/commentBox'\r\n// \r\ndom.watch()\r\nexport default class issueSmall extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { name: this.props.name }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.name !== this.props.name) {\r\n            this.setState({ name: this.props.name })\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.name !== undefined)\r\n            return (\r\n                <tr key={this.state.name.id}>\r\n                    <td><div className='container'>\r\n                        <div className=\"media\">\r\n                            <i className=\"fas fa-exclamation-circle fa-2x mr-2 text-success\" ></i>\r\n                            <div className=\"media-body text-left  \">\r\n                                <div className='row'>\r\n                                    <div className=\"col-sm-6\"><h5 className=\"mt-0 text-left\"><strong>{this.state.name.topic}</strong></h5></div>\r\n                                    <div className=\"col-sm-5\"></div>\r\n                                    <div className=\"col-sm-1 \" style={{ 'textAlign': 'right' }}>\r\n                                        <CommentBox name={this.state.name} />\r\n                                    </div>\r\n                                </div>\r\n                                    #{this.state.name.id} opened {Math.floor((new Date() - new Date(this.state.name.creationdate)) / (1000 * 60 * 60 * 24))} days ago by {this.state.name.author}\r\n                            </div>\r\n                        </div></div>\r\n                        {/* {JSON.stringify(this.state.name)} */}\r\n                    </td>\r\n                </tr >\r\n            )\r\n        else return <tr key={Math.random()} style={{ 'display': 'none' }}></tr>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport IssueSmall from '../IssueSmall/issueSmall'\r\nexport default class searchBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { data: ['', ''], records: 10, laterRecords: 8 }\r\n        // this.RowsCreator = this.RowsCreator.bind(this)\r\n        // this.UpdateRecords = this.UpdateRecords.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.PageHandler(0)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.data !== this.props.data) {\r\n            this.setState({ data: this.props.data })\r\n        }\r\n    }\r\n    RowsCreator() {\r\n        var retun_arry = []\r\n        for (var i = 0; i < this.state.records; i++) {\r\n\r\n            retun_arry.push(<IssueSmall name={this.state.data[i]} />)\r\n        }\r\n        if (this.state.data.length > i)\r\n            retun_arry.push(<td style={{ 'border': 'none' }}></td>)\r\n        for (; i < this.state.laterRecords; i++) {\r\n            retun_arry.push(<IssueSmall name={this.state.data[i]} />)\r\n        }\r\n        return retun_arry\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <table className='table table-bordered rounded table-hover mt-3' style={{ 'border': 'none', 'borderSpacing': '0px', 'borderCollapse': 'separate' }} >\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th scope=\"col\" style={{ 'textAlign': 'left', 'padding': '0px', 'borderRadius': '16px', \"borderBottomLeftRadius\": '0', \"borderBottomRightRadius\": \"0\" }}>\r\n                                <div className='row'>\r\n                                    <div className='col-lg-4 pt-3 pl-5'>\r\n                                        <i className=\"fas fa-exclamation-circle m-1 text-dark\" ></i><strong>{this.props.openIssue} Open</strong>\r\n                                        <i className=\"fas fa-check m-1 ml-3\"></i>{this.props.closeIssue} Closed\r\n                                        </div>\r\n                                    <div className='col-lg-2'></div>\r\n                                    <div className='col-lg-6 '>\r\n                                        <nav className=\"navbar navbar-expand-sm navbar-light sm-light\" style={{ 'display': 'inline-block' }}>\r\n                                            <div className=\" collapse  navbar-collapse \" id=\"navbarSupportedContent\">\r\n                                                <ul className=\"navbar-nav mr-auto \">\r\n                                                    <li className=\"nav-item dropdown\">\r\n                                                        <a className=\"nav-link  dropdown-toggle\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Author</a>\r\n                                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Action</a>\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Another action</a>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    <li className=\"nav-item dropdown\">\r\n                                                        <a className=\"nav-link  dropdown-toggle\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Label</a>\r\n                                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Action</a>\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Another action</a>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    <li className=\"nav-item dropdown\">\r\n                                                        <a className=\"nav-link  dropdown-toggle\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Projects</a>\r\n                                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Action</a>\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Another action</a>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    <li className=\"nav-item dropdown\">\r\n                                                        <a className=\"nav-link  dropdown-toggle\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Millestones</a>\r\n                                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Action</a>\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Another action</a>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    <li className=\"nav-item dropdown\">\r\n                                                        <a className=\"nav-link  dropdown-toggle\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Assignee</a>\r\n                                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Action</a>\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Another action</a>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    <li className=\"nav-item dropdown\">\r\n                                                        <a className=\"nav-link  dropdown-toggle\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Sort</a>\r\n                                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Action</a>\r\n                                                            <a className=\"dropdown-item\" href=\"/#\">Another action</a>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </nav>\r\n                                    </div>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.RowsCreator()}\r\n                    </tbody>\r\n                </table>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\nimport './pagenation.css'\r\nwindow.React = React;\r\nexport default class Paginations extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            page: 0,\r\n        }\r\n        this.loadCommentsFromServer = this.loadCommentsFromServer.bind(this)\r\n        this.handlePageClick = this.handlePageClick.bind(this)\r\n    }\r\n\r\n\r\n    loadCommentsFromServer() {\r\n        this.props.PageHandler(this.state.page)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCommentsFromServer();\r\n    }\r\n\r\n    handlePageClick = (data) => {\r\n        let selected = data.selected;\r\n        let offset = Math.ceil(selected);\r\n        this.setState({ page: offset }, () => {\r\n            this.loadCommentsFromServer();\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"react-paginate\">\r\n                <ReactPaginate\r\n                    previousLabel={'< Previous'}\r\n                    nextLabel={'Next >'}\r\n                    breakLabel={'...'}\r\n                    breakClassName={'break-me'}\r\n                    pageCount={this.state.pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.handlePageClick}\r\n                    containerClassName={'pagination'}\r\n                    subContainerClassName={'pages pagination'}\r\n                    activeClassName={'active'}\r\n                /></div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport SearchBar from '../searchBar/searchBar'\r\nimport IssueHolder from '../issueHolder/issueHolder'\r\nimport Pagination from '../pagenation/pagenation'\r\n\r\nclass issuePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: [],\r\n            totalIssue: 0,\r\n            closeIssue: 0,\r\n            closed: undefined,\r\n            // filter: 0\r\n        }\r\n        this.UpdateRecords = this.UpdateRecords.bind(this)\r\n        this.updateFilter = this.updateFilter.bind(this)\r\n    }\r\n\r\n    updateFilter(value) {\r\n        this.setState({ closed: value },()=>{this.UpdateRecords(0)})\r\n        \r\n    }\r\n\r\n    UpdateRecords(page) {\r\n\r\n        fetch('http://localhost:5400/list-issue?page=' + page + '&isclosed=' + this.state.closed).then((res) => {\r\n            return res.json()\r\n        }).then((data) => {\r\n            this.setState({ data: data.data, totalIssue: data.issueCount, closeIssue: data.closeCount })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container mt-2'>\r\n                <SearchBar filterHandler={this.updateFilter} />\r\n                <IssueHolder data={this.state.data} openIssue={this.state.totalIssue - this.state.closeIssue} closeIssue={this.state.closeIssue} PageHandler={this.UpdateRecords} />\r\n                <Pagination PageHandler={this.UpdateRecords} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default issuePage\r\n","import React from 'react';\nimport './App.css';\nimport IssuePage from './issuePage/issuePage'\n\n// import { library } from '@fortawesome/fontawesome-svg-core'\n// import { fab } from '@fortawesome/free-brands-svg-icons'\n// import { faCheckSquare } from '@fortawesome/free-solid-svg-icons'\nfunction App() {\n\n  // library.add(fab, faCheckSquare)\n\n  return (\n    <div className=\"App \">\n      <IssuePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}